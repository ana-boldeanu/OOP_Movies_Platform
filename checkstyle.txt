Starting audit...
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:8:8: Unused import - fileio.SerialInputData. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:12:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:20:19: Parameter data should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:24:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'commandFavourite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'commandFavourite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:24:36: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:24:53: Parameter title should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:33:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'commandView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'commandView' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:33:31: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:33:48: Parameter title should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:42:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'commandRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'commandRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:42:33: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:42:50: Parameter title should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:42:64: Parameter rating should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:42:79: Parameter season should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:60: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:60:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'queryActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'queryActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:60:36: Parameter number should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:60:48: Parameter filters should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:60:76: Parameter sortType should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:60:93: Parameter criteria should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:64:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:71:40: Parameter actor1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:71:54: Parameter actor2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:95:53: '3' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:101:40: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:101:50: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:121:40: Parameter actor1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:121:54: Parameter actor2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'queryShows' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'queryShows' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133:34: Parameter number should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133:46: Parameter filters should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133:74: Parameter sortType should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133:91: Parameter criteria should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:133:108: Parameter showType should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:158:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:189:9: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:189:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:193:40: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:193:49: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:214:40: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:214:49: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:235:40: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:235:49: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:254:40: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:254:49: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:276:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'queryUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'queryUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:276:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:276:34: Parameter number should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:276:46: Parameter sortType should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:276:63: Parameter criteria should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:287:36: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:287:45: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:311:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'recommendStandard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'recommendStandard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:311:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:311:37: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:328:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'recommendBestUnseen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'recommendBestUnseen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:328:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:328:39: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:339:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:339:41: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:356:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'recommendPopular' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'recommendPopular' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:356:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:356:36: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:370:20: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:371:17: Variable 'popularity' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:373:13: Redundant 'public' modifier. [RedundantModifier]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:373:36: Parameter name should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:373:49: Parameter popularity should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:399:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:399:52: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:422:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'recommendFavourite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'recommendFavourite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:422:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:422:38: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:441:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:441:41: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:462:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'recommendSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'recommendSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:462:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:462:35: Parameter username should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:462:52: Parameter genre should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:486:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\Action.java:486:41: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\DataContainer.java:6:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\DataContainer.java:18:26: Parameter input should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\DataContainer.java:54:5: Class 'DataContainer' looks like designed for extension (can be subclassed), but the method 'getActorsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataContainer' final or making the method 'getActorsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\DataContainer.java:58:5: Class 'DataContainer' looks like designed for extension (can be subclassed), but the method 'getUsersList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataContainer' final or making the method 'getUsersList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\DataContainer.java:62:5: Class 'DataContainer' looks like designed for extension (can be subclassed), but the method 'getMoviesList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataContainer' final or making the method 'getMoviesList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actions\DataContainer.java:66:5: Class 'DataContainer' looks like designed for extension (can be subclassed), but the method 'getSerialsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataContainer' final or making the method 'getSerialsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:45:37: Parameter awards should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:46:18: Parameter moviesFilmography should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:46:54: Parameter serialsFilmography should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:56:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'computeRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'computeRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:76:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'hasAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'hasAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:76:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:76:30: Parameter wantedAwards should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:85:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'computeNoAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'computeNoAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:85:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:91:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'hasKeyWords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'hasKeyWords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:91:32: Parameter keyWords should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:100:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:104:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:108:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getNumberOfAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getNumberOfAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:112:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:116:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\actor\Actor.java:120:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Movie.java:26:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'receiveRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'receiveRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Movie.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Movie.java:26:31: Parameter rating should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Movie.java:30:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'computeRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'computeRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Movie.java:44:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'computeTotalDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'computeTotalDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:3:8: Unused import - actions.DataContainer. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:4:8: Unused import - user.User. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:7:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:30:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'receiveRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'receiveRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:30:31: Parameter rating should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:30:46: Parameter seasonNumber should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:38:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'computeRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'computeRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:41:17: Name 'OK' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:58:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'computeTotalDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'computeTotalDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:67:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Serial.java:71:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:6:8: Unused import - java.lang.reflect.Array. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:59:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'computeTimesFavorite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'computeTimesFavorite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:59:38: Parameter data should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:67:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'computeTimesViewed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'computeTimesViewed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:67:36: Parameter data should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:81:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:85:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:89:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:93:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:97:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getFinalRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getFinalRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:101:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTimesFavorite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTimesFavorite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:105:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTimesViewed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTimesViewed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:109:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTotalDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTotalDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\entertainment\Show.java:113:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:9:8: Unused import - entertainment.Movie. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:10:8: Unused import - entertainment.Serial. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:19:8: Unused import - javax.xml.crypto.Data. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:25:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:91:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:112:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:142:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\GitHub\POO_Tema1\.\src\main\Main.java:160: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:5:8: Unused import - entertainment.Show. [UnusedImports]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:44:40: Parameter subscriptionType should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:45:17: Parameter history should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:46:17: Parameter favoriteShows should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:56:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addFavourite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addFavourite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:56:32: Parameter title should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:70:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addView' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:70:27: Parameter title should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:80:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:80:29: Parameter movie should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:80:42: Parameter rating should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:87: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:94:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:94:29: Parameter serial should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:94:44: Parameter rating should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:94:59: Parameter season should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:111: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:118:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'computeNoRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'computeNoRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:118:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:123:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:127:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:131:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:135:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteShows' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteShows' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:139:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNoRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNoRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\user\User.java:143:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Tema1\.\src\utils\Utils.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\utils\Utils.java:56:40: Parameter genre should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\utils\Utils.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Tema1\.\src\utils\Utils.java:98:41: Parameter award should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Tema1\.\src\utils\Utils.java:99:16: 'switch' is not followed by whitespace. [WhitespaceAround]
Audit done.
Checkstyle ends with 189 errors.
